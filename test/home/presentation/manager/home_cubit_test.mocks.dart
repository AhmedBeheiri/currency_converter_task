// Mocks generated by Mockito 5.4.4 from annotations
// in currency_converter_task/test/home/presentation/manager/home_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:currency_converter_task/core/error/failures.dart' as _i5;
import 'package:currency_converter_task/features/Home/domain/entities/currency_entity.dart'
    as _i6;
import 'package:currency_converter_task/features/Home/domain/repositories/home_repo.dart'
    as _i3;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HomeRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeRepo extends _i1.Mock implements _i3.HomeRepo {
  @override
  _i4.Future<
      _i2.Either<_i5.Failure,
          List<_i6.CurrencyEntity>>> getCurrencies() => (super.noSuchMethod(
        Invocation.method(
          #getCurrencies,
          [],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i6.CurrencyEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.CurrencyEntity>>(
          this,
          Invocation.method(
            #getCurrencies,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, List<_i6.CurrencyEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.CurrencyEntity>>(
          this,
          Invocation.method(
            #getCurrencies,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.CurrencyEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, num>> getConversionRate(
    String? from,
    String? to,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getConversionRate,
          [
            from,
            to,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, num>>.value(
            _FakeEither_0<_i5.Failure, num>(
          this,
          Invocation.method(
            #getConversionRate,
            [
              from,
              to,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, num>>.value(
                _FakeEither_0<_i5.Failure, num>(
          this,
          Invocation.method(
            #getConversionRate,
            [
              from,
              to,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, num>>);

  @override
  _i4.Future<
      _i2.Either<_i5.Failure, List<Map<String, dynamic>>>> getHistoricalRates(
    String? from,
    String? to,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getHistoricalRates,
          [
            from,
            to,
          ],
        ),
        returnValue: _i4
            .Future<_i2.Either<_i5.Failure, List<Map<String, dynamic>>>>.value(
            _FakeEither_0<_i5.Failure, List<Map<String, dynamic>>>(
          this,
          Invocation.method(
            #getHistoricalRates,
            [
              from,
              to,
            ],
          ),
        )),
        returnValueForMissingStub: _i4
            .Future<_i2.Either<_i5.Failure, List<Map<String, dynamic>>>>.value(
            _FakeEither_0<_i5.Failure, List<Map<String, dynamic>>>(
          this,
          Invocation.method(
            #getHistoricalRates,
            [
              from,
              to,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<Map<String, dynamic>>>>);
}
